// Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/aws/amazon-ecs-cni-plugins/pkg/ioutilwrapper (interfaces: IOUtil)

package mock_ioutilwrapper

import (
	os "os"

	gomock "github.com/golang/mock/gomock"
)

// Mock of IOUtil interface
type MockIOUtil struct {
	ctrl     *gomock.Controller
	recorder *_MockIOUtilRecorder
}

// Recorder for MockIOUtil (not exported)
type _MockIOUtilRecorder struct {
	mock *MockIOUtil
}

func NewMockIOUtil(ctrl *gomock.Controller) *MockIOUtil {
	mock := &MockIOUtil{ctrl: ctrl}
	mock.recorder = &_MockIOUtilRecorder{mock}
	return mock
}

func (_m *MockIOUtil) EXPECT() *_MockIOUtilRecorder {
	return _m.recorder
}

func (_m *MockIOUtil) ReadDir(_param0 string) ([]os.FileInfo, error) {
	ret := _m.ctrl.Call(_m, "ReadDir", _param0)
	ret0, _ := ret[0].([]os.FileInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIOUtilRecorder) ReadDir(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReadDir", arg0)
}

func (_m *MockIOUtil) ReadFile(_param0 string) ([]byte, error) {
	ret := _m.ctrl.Call(_m, "ReadFile", _param0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIOUtilRecorder) ReadFile(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ReadFile", arg0)
}
