// Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/vishvananda/netlink (interfaces: Link)

package mock_netlink

import (
	gomock "github.com/golang/mock/gomock"
	netlink "github.com/vishvananda/netlink"
)

// Mock of Link interface
type MockLink struct {
	ctrl     *gomock.Controller
	recorder *_MockLinkRecorder
}

// Recorder for MockLink (not exported)
type _MockLinkRecorder struct {
	mock *MockLink
}

func NewMockLink(ctrl *gomock.Controller) *MockLink {
	mock := &MockLink{ctrl: ctrl}
	mock.recorder = &_MockLinkRecorder{mock}
	return mock
}

func (_m *MockLink) EXPECT() *_MockLinkRecorder {
	return _m.recorder
}

func (_m *MockLink) Attrs() *netlink.LinkAttrs {
	ret := _m.ctrl.Call(_m, "Attrs")
	ret0, _ := ret[0].(*netlink.LinkAttrs)
	return ret0
}

func (_mr *_MockLinkRecorder) Attrs() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Attrs")
}

func (_m *MockLink) Type() string {
	ret := _m.ctrl.Call(_m, "Type")
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockLinkRecorder) Type() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Type")
}
