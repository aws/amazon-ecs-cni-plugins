// Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/aws/amazon-ecs-cni-plugins/pkg/cniipwrapper (interfaces: IP)

package mock_cniipwrapper

import (
	net "net"

	"github.com/containernetworking/cni/pkg/ns"
	gomock "github.com/golang/mock/gomock"
)

// Mock of IP interface
type MockIP struct {
	ctrl     *gomock.Controller
	recorder *_MockIPRecorder
}

// Recorder for MockIP (not exported)
type _MockIPRecorder struct {
	mock *MockIP
}

func NewMockIP(ctrl *gomock.Controller) *MockIP {
	mock := &MockIP{ctrl: ctrl}
	mock.recorder = &_MockIPRecorder{mock}
	return mock
}

func (_m *MockIP) EXPECT() *_MockIPRecorder {
	return _m.recorder
}

func (_m *MockIP) DelLinkByNameAddr(_param0 string, _param1 int) (*net.IPNet, error) {
	ret := _m.ctrl.Call(_m, "DelLinkByNameAddr", _param0, _param1)
	ret0, _ := ret[0].(*net.IPNet)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIPRecorder) DelLinkByNameAddr(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DelLinkByNameAddr", arg0, arg1)
}

func (_m *MockIP) SetHWAddrByIP(_param0 string, _param1 net.IP, _param2 net.IP) error {
	ret := _m.ctrl.Call(_m, "SetHWAddrByIP", _param0, _param1, _param2)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIPRecorder) SetHWAddrByIP(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetHWAddrByIP", arg0, arg1, arg2)
}

func (_m *MockIP) SetupVeth(_param0 string, _param1 int, _param2 ns.NetNS) (net.Interface, net.Interface, error) {
	ret := _m.ctrl.Call(_m, "SetupVeth", _param0, _param1, _param2)
	ret0, _ := ret[0].(net.Interface)
	ret1, _ := ret[1].(net.Interface)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

func (_mr *_MockIPRecorder) SetupVeth(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetupVeth", arg0, arg1, arg2)
}
